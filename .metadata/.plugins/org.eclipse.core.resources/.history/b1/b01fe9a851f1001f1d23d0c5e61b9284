package mongodb.entity;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class Coche {

	private String matricula;
	private String marca;
	private String modelo;
	private String permisoCircId;
	private PermisoCirc permisoCirc;
	private List<Reparacion> reparaciones= new ArrayList();
	private List<Conductor> conductores= new ArrayList();
	private List<Integer> reparacionesIds= new ArrayList();
	private List<String> conductoresIds= new ArrayList();

	public Coche() {

	}

	public Coche(String matricula, String marca, String modelo, PermisoCirc permisoCirc) {
		super();
		this.matricula = matricula;
		this.marca = marca;
		this.modelo = modelo;
		this.permisoCirc = permisoCirc;
		
		if (permisoCirc != null) {
			this.permisoCircId = permisoCirc.getNumID();
		}	
	}

	@Override
	public String toString() {
		return "Coche [matricula=" + matricula + ", marca=" + marca + ", modelo=" + modelo + ", permisoCircId="
				+ permisoCircId + ", reparacionesIds=" + reparacionesIds + ", conductoresIds=" + conductoresIds + "]";
	}

	public String getMatricula() {
		return matricula;
	}

	public void setMatricula(String matricula) {
		this.matricula = matricula;
	}

	public String getMarca() {
		return marca;
	}

	public void setMarca(String marca) {
		this.marca = marca;
	}

	public String getModelo() {
		return this.modelo;
	}

	public void setModelo(String modelo) {
		this.modelo = modelo;
	}

	public PermisoCirc getPermisoCirc() {
		return permisoCirc;
	}

	public void setPermisoCirc(PermisoCirc permisoCirc) {
		this.permisoCirc = permisoCirc;
		this.permisoCircId = permisoCirc.getNumID();
		this.permisoCirc.setCoche(this);
	}

	public String getPermisoCircId() {
		return permisoCircId;
	}

	public List<Reparacion> getReparaciones() {
		return reparaciones;
	}

	public void setReparaciones(List<Reparacion> reparaciones) {
		this.reparaciones = reparaciones;
		for (Reparacion rep : reparaciones) {
			rep.setCoche(this);
			reparacionesIds.add(rep.getId());
			
		}
	}

	public void AddReparacion(Reparacion reparacion) {
		reparacion.setCoche(this);
		this.reparaciones.add(reparacion);
		this.reparacionesIds.add(reparacion.getId());
		
	}

	public void DelReparacion(Reparacion reparacion) {
		for (Reparacion rep : this.reparaciones) {
			if (rep.equals(reparacion)) {
				this.reparacionesIds.remove(rep);
				break;
			}
		}
		for (int repId : this.reparacionesIds) {
			if (repId== reparacion.getId()) {
				this.reparacionesIds.remove(repId);
				break;
			}
		}
	}

	public List<Conductor> getConductores() {
		return conductores;
	}

	public void setConductores(List<Conductor> conductores) {
		this.conductores = conductores;
		for (Conductor cond : conductores) {
			cond.addCoche(this);
			conductoresIds.add(cond.getIdCond());
		}
	}

	public void AddConductor(Conductor conductor) {
		conductor.addCoche(this);
		this.conductores.add(conductor);
		this.conductoresIds.add(conductor.getIdCond());
		
	}

	public void DelConductor(Conductor conductor) {
	
		for (String condId : this.conductoresIds) {
			if (condId.equalsIgnoreCase(conductor.getIdCond())) {
				this.reparacionesIds.remove(condId);
				break;
			}
		}
	}

	public void setPermisoCircId(String permisoCircId) {
		this.permisoCircId = permisoCircId;
	}

	public List<Integer> getReparacionesIds() {
		return reparacionesIds;
	}

	public void setReparacionesIds(List<Integer> reparaciones) {
		this.reparacionesIds = reparaciones;
	}

	public List<String> getConductoresIds() {
		return conductoresIds;
	}

	public void setConductoresIds(List<String> conductoresIds) {
		this.conductoresIds = conductoresIds;
	}

	public void eliminarReparacion(int numRep) {
		
	    Iterator<Reparacion> iterator = this.reparaciones.iterator();
	    
	    while (iterator.hasNext()) {
	        Reparacion rep = iterator.next();
	        if (rep.getId() == numRep) {
	            iterator.remove(); 
	            System.out.println("Reparación eliminada correctamente en el coche.");
	            return; 
	        }
	    }

	    System.out.println("No se encontró una reparación con ese número.");
	}
	public void eliminarReparacionId(int numRep) {
		
	    Iterator<Integer> iterator = this.reparacionesIds.iterator();
	    
	    while (iterator.hasNext()) {
	        int rep = iterator.next();
	        if (rep == numRep) {
	            iterator.remove(); 
	            System.out.println("ReparaciónID eliminada correctamente en el coche.");
	            return; 
	        }
	    }

	    System.out.println("No se encontró una reparación con ese número.");
	}

	public void borrarCond(int numCarnet) {
		
		
	}

}
